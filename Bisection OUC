function mu_opt = Bisection_OUC(A,B,R,S,x,l,N)
lower = 0.0000001;
upper = lower + 1;

%%% serching for upper bound
while cost_function_OUC(A,B,R,S,x,l,N,upper)*cost_function_OUC(A,B,R,S,x,l,N,lower)>0
    lower = upper;
    upper = upper + 1;
end
mu_opt = lower/2 + upper/2;
eps = 0.0000001;

for i = 1:10
    if abs(cost_function_OUC(A,B,R,S,x,l,N,mu_opt)) < eps
        break
    end
    if cost_function_OUC(A,B,R,S,x,l,N,mu_opt)*cost_function_OUC(A,B,R,S,x,l,N,lower)<0
        upper = mu_opt;
        mu_opt = (upper + lower)/2;
    else
        lower = mu_opt;
        mu_opt = (upper + lower)/2;
    end
end
