t = 0:40;

%%% Initialize %%%
n = 3;%state dimension
m = 2;%input dimension
A = [0.5,0.1,-0.2;-0.3,0.9,0.1;0.3,0.5,0.9];
B = [0,0;0,1;1,0];
Q = eye(n);
R = eye(m);

mu = 1;%Lacrange multiplier
l = 0.8;%hard constraint for input

S = zeros(n,n,length(t)+1);
S_f = eye(n);
%%% Riccati equiation for S,a %%%
S(:,:,length(t)+1) = S_f;
for i = 1:length(t)-1
    S(:,:,length(t)+1-i) = A'*S(:,:,length(t)-i)*A - A'*S(:,:,length(t)-i)*B/(2*mu*R+B'*S(:,:,length(t)-i)*B)*B'*S(:,:,length(t)-i+1)*A + Q;
end

%%%

%%% Dynamics %%%
x = ones(n,length(t));
u = zeros(m,length(t));

mu_opt = Bisection_OUC(A,B,R,S,x(:,1),l,length(t))
%{
if cost_function_OUC(A,B,R,S,x(:,1),l,length(t),1)<0
    mu_opt = 1;
end
%}
x(:,1) = x(:,1)*1;
for i = 1:length(t)
    u(:,i) = -1*inv(2*mu_opt*R+B'*S(:,:,i+1)*B)*B'*S(:,:,i+1)*A*x(:,i);
    x(:,i+1) = A*x(:,i) + B*u(:,i);
end

%%% cost function %%%
J = zeros(1,length(t));
for i = 1:length(t)-1
    J(i+1) = J(i) + u(:,i)'*R*u(:,i);
end

plot(t,x(:,1:length(t)));
figure
plot(t,J(:,1:length(t)));
legend
grid on
